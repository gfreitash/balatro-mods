[manifest]
version = "1.1.0" # Incremented version for new changes
dump_lua = true # Optional: Keep enabled for debugging


# --- Interest Calculation Changes ---

# Add interest_base to game setup in game.lua
[[patches]]
[patches.pattern]
target = "game.lua"
# Find the line defining interest_amount
pattern = "interest_amount = 1,"
# Insert the new line after it
position = "after"
# The new line to add, including the comma
payload = "interest_base = 5,"
match_indent = true
times = 1

# Modify Seed Money and Money Tree extra in game.lua
[[patches]]
[patches.pattern]
target = "game.lua"
# Find the line defining interest_amount
pattern = '''
        v_seed_money=       {order = 21,    discovered = false, unlocked = true , available = true, cost = 10, name = "Seed Money", pos = {x=1,y=2}, set = "Voucher", config = {extra = 50}},
'''
# Insert the new line after it
position = "after"
# The new line to add, including the comma
payload = '''
        v_seed_money=       {order = 21,    discovered = false, unlocked = true , available = true, cost = 10, name = "Seed Money", pos = {x=1,y=2}, set = "Voucher", config = {extra = 10}},
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "game.lua"
# Find the line defining interest_amount
pattern = '''
        v_money_tree=       {order = 22,    discovered = false, unlocked = false, available = true, cost = 10, name = "Money Tree", pos = {x=1,y=3}, set = "Voucher", config = {extra = 100}, requires = {'v_seed_money'},unlock_condition = {type = 'interest_streak', extra = 10}},
'''
# Insert the new line after it
position = "after"
# The new line to add, including the comma
payload = '''
        v_money_tree=       {order = 22,    discovered = false, unlocked = false, available = true, cost = 10, name = "Money Tree", pos = {x=1,y=3}, set = "Voucher", config = {extra = 20}, requires = {'v_seed_money'},unlock_condition = {type = 'interest_streak', extra = 10}},
'''
match_indent = true
times = 1

# Modify Seed Money and Money Tree calculation in card.lua
[[patches]]
[patches.pattern]
target = "card.lua"
# Find the line defining interest_amount
pattern = '''
    if center_table.name == 'Seed Money' or center_table.name == 'Money Tree' then
        G.E_MANAGER:add_event(Event({func = function()
            G.GAME.interest_cap = center_table.extra
            return true end }))
    end
'''
# Insert the new line after it
position = "after"
# The new line to add, including the comma
payload = '''
    if center_table.name == 'Seed Money' or center_table.name == 'Money Tree' then
        G.E_MANAGER:add_event(Event({func = function()
            G.GAME.interest_cap = center_table.extra * G.GAME.interest_base
            return true end }))
    end
'''
match_indent = true
times = 1


# Modify interest calculation in common_events.lua
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
# Find the exact line with the hardcoded 5
pattern = '''
                    table.insert(left_text,{n=G.UIT.O, config={object = DynaText({string = {" "..localize{type = 'variable', key = 'interest', vars = {G.GAME.interest_amount, 5, G.GAME.interest_amount*G.GAME.interest_cap/5}}}, colours = {G.C.UI.TEXT_LIGHT}, shadow = true, pop_in = 0, scale = 0.4*scale, silent = true})}})
'''
# Replace the line
position = "at"
# The new line using G.GAME.interest_base
payload =  '''
                    table.insert(left_text,{n=G.UIT.O, config={object = DynaText({string = {" "..localize{type = 'variable', key = 'interest', vars = {G.GAME.interest_amount, G.GAME.interest_base, G.GAME.interest_amount*G.GAME.interest_cap/G.GAME.interest_base}}}, colours = {G.C.UI.TEXT_LIGHT}, shadow = true, pop_in = 0, scale = 0.4*scale, silent = true})}})
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
# Find the exact line with the hardcoded 5
pattern = '''
        elseif _c.name == "Seed Money" or _c.name == "Money Tree" then loc_vars = {cfg.extra/5}
'''
# Replace the line
position = "at"
# The new line using G.GAME.interest_base
payload = '''
        elseif _c.name == "Seed Money" or _c.name == "Money Tree" then loc_vars =  {_c.config.extra}
'''
match_indent = true
times = 1

# Modify interest calculation block in state_events.lua
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
# Find the first line of the interest calculation block
pattern = '''
    if G.GAME.dollars >= 5 and not G.GAME.modifiers.no_interest then
        add_round_eval_row({bonus = true, name='interest', pitch = pitch, dollars = G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5)})
        pitch = pitch + 0.06
        if (not G.GAME.seeded and not G.GAME.challenge) or SMODS.config.seeded_unlocks then
            if G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5) == G.GAME.interest_amount*G.GAME.interest_cap/5 then
                G.PROFILES[G.SETTINGS.profile].career_stats.c_round_interest_cap_streak = G.PROFILES[G.SETTINGS.profile].career_stats.c_round_interest_cap_streak + 1
            else
                G.PROFILES[G.SETTINGS.profile].career_stats.c_round_interest_cap_streak = 0
            end
        end
        check_for_unlock({type = 'interest_streak'})
        dollars = dollars + G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5)
    end
'''
# Replace the entire block starting from that line
position = "at"
# The new multi-line block using G.GAME.interest_base and checking >= 1
payload = '''
    if G.GAME.dollars >= 1 and not G.GAME.modifiers.no_interest then
        add_round_eval_row({bonus = true, name='interest', pitch = pitch, dollars = G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/G.GAME.interest_base), G.GAME.interest_cap/G.GAME.interest_base)})
        pitch = pitch + 0.06
        if not G.GAME.seeded and not G.GAME.challenge then
            if G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/G.GAME.interest_base), G.GAME.interest_cap/G.GAME.interest_base) == G.GAME.interest_amount*G.GAME.interest_cap/G.GAME.interest_base then
                G.PROFILES[G.SETTINGS.profile].career_stats.c_round_interest_cap_streak = G.PROFILES[G.SETTINGS.profile].career_stats.c_round_interest_cap_streak + 1
            else
                G.PROFILES[G.SETTINGS.profile].career_stats.c_round_interest_cap_streak = 0
            end
        end
        check_for_unlock({type = 'interest_streak'})
        dollars = dollars + G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/G.GAME.interest_base), G.GAME.interest_cap/G.GAME.interest_base)
    end
'''
match_indent = true
times = 1