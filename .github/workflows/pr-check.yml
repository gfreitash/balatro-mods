name: Validate Mod Versions

on:
  pull_request:
    branches: [main]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history to diff against the PR's base branch
          fetch-depth: 0

      - name: Run Version Sync Script
        id: sync
        run: |
          echo "PR detected. Comparing this PR's HEAD against base branch (origin/${{ github.base_ref }})"
          git fetch origin ${{ github.base_ref }}

          echo "Temporarily modifying sync-versions.sh to use the correct commit range for the PR..."
          # The script defaults to comparing HEAD~1..HEAD, which is for pushes.
          # For a PR, we need to compare the PR's HEAD against its base branch.
          sed -i 's|COMMIT_RANGE="HEAD~1..HEAD"|COMMIT_RANGE="origin/${{ github.base_ref }}..HEAD"|' ./sync-versions.sh

          echo "üîç Running sync script to validate versions..."
          ./sync-versions.sh

      - name: Check for Uncommitted Changes
        run: |
          echo "Checking for uncommitted changes after running the sync script..."
          if ! git diff --quiet; then
            echo "::error::The sync-versions.sh script produced changes."
            echo "This means a manifest.json version or a CHANGELOG.md is out of sync."
            echo "Please run './sync-versions.sh' locally, commit the resulting changes, and push again."
            echo "---"
            echo "Changes detected:"
            git diff
            exit 1
          else
            echo "‚úÖ Validation successful. Versions are in sync."
          fi